{
  "version": 3,
  "sources": ["../../vuetify/src/labs/VDateInput/VDateInput.tsx"],
  "sourcesContent": ["// Components\nimport { makeVConfirmEditProps, VConfirmEdit } from '@/components/VConfirmEdit/VConfirmEdit'\nimport { makeVDatePickerProps, VDatePicker } from '@/components/VDatePicker/VDatePicker'\nimport { VMenu } from '@/components/VMenu/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\n\n// Composables\nimport { useDate } from '@/composables/date'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, shallowRef } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nexport interface VDateInputSlots {\n  default: never\n}\n\nexport const makeVDateInputProps = propsFactory({\n  hideActions: Boolean,\n\n  ...makeFocusProps(),\n  ...makeVConfirmEditProps(),\n  ...makeVTextFieldProps({\n    placeholder: 'mm/dd/yyyy',\n    prependIcon: '$calendar',\n  }),\n  ...omit(makeVDatePickerProps({\n    weeksInMonth: 'dynamic' as const,\n    hideHeader: true,\n  }), ['active']),\n}, 'VDateInput')\n\nexport const VDateInput = genericComponent()({\n  name: 'VDateInput',\n\n  props: makeVDateInputProps(),\n\n  emits: {\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const adapter = useDate()\n    const { isFocused, focus, blur } = useFocus(props)\n    const model = useProxiedModel(props, 'modelValue', props.multiple ? [] : null)\n    const menu = shallowRef(false)\n\n    const display = computed(() => {\n      const value = wrapInArray(model.value)\n\n      if (!value.length) return null\n\n      if (props.multiple === true) {\n        return t('$vuetify.datePicker.itemsSelected', value.length)\n      }\n\n      if (props.multiple === 'range') {\n        const start = value[0]\n        const end = value[value.length - 1]\n\n        return adapter.isValid(start) && adapter.isValid(end)\n          ? `${adapter.format(start, 'keyboardDate')} - ${adapter.format(end, 'keyboardDate')}`\n          : ''\n      }\n\n      return adapter.isValid(model.value) ? adapter.format(model.value, 'keyboardDate') : ''\n    })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key !== 'Enter') return\n\n      if (!menu.value || !isFocused.value) {\n        menu.value = true\n\n        return\n      }\n\n      const target = e.target as HTMLInputElement\n\n      model.value = adapter.date(target.value)\n    }\n\n    function onClick (e: MouseEvent) {\n      e.preventDefault()\n      e.stopPropagation()\n\n      menu.value = true\n    }\n\n    function onSave () {\n      menu.value = false\n    }\n\n    useRender(() => {\n      const confirmEditProps = VConfirmEdit.filterProps(props)\n      const datePickerProps = VDatePicker.filterProps(omit(props, ['active']))\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          { ...textFieldProps }\n          modelValue={ display.value }\n          onKeydown={ onKeydown }\n          focused={ menu.value || isFocused.value }\n          onFocus={ focus }\n          onBlur={ blur }\n          onClick:control={ onClick }\n          onClick:prepend={ onClick }\n        >\n          <VMenu\n            v-model={ menu.value }\n            activator=\"parent\"\n            min-width=\"0\"\n            closeOnContentClick={ false }\n            openOnClick={ false }\n          >\n            <VConfirmEdit\n              { ...confirmEditProps }\n              v-model={ model.value }\n              onSave={ onSave }\n            >\n              {{\n                default: ({ actions, model: proxyModel }) => {\n                  return (\n                    <VDatePicker\n                      { ...datePickerProps }\n                      modelValue={ props.hideActions ? model.value : proxyModel.value }\n                      onUpdate:modelValue={ val => {\n                        if (!props.hideActions) {\n                          proxyModel.value = val\n                        } else {\n                          model.value = val\n\n                          if (!props.multiple) menu.value = false\n                        }\n                      }}\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                    >\n                      {{\n                        actions: !props.hideActions ? () => actions : undefined,\n                      }}\n                    </VDatePicker>\n                  )\n                },\n              }}\n            </VConfirmEdit>\n          </VMenu>\n\n          { slots.default?.() }\n        </VTextField>\n      )\n    })\n  },\n})\n\nexport type VDateInput = InstanceType<typeof VDateInput>\n"],
  "mappings": "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",
  "names": ["makeVDateInputProps", "propsFactory", "hideActions", "Boolean", "makeFocusProps", "makeVConfirmEditProps", "makeVTextFieldProps", "placeholder", "prependIcon", "omit", "makeVDatePickerProps", "weeksInMonth", "hideHeader", "VDateInput", "genericComponent", "name", "props", "emits", "val", "setup", "_ref", "slots", "t", "useLocale", "adapter", "useDate", "isFocused", "focus", "blur", "useFocus", "model", "useProxiedModel", "multiple", "menu", "shallowRef", "display", "computed", "value", "wrapInArray", "length", "start", "end", "isValid", "format", "onKeydown", "e", "key", "target", "date", "onClick", "preventDefault", "stopPropagation", "onSave", "useRender", "confirmEditProps", "VConfirmEdit", "filterProps", "datePickerProps", "VDatePicker", "textFieldProps", "VTextField", "_createVNode", "_mergeProps", "default", "VMenu", "$event", "_ref2", "actions", "proxyModel", "undefined"]
}
